[{"C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\index.js":"1","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\App.js":"2","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\reportWebVitals.js":"3","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\components\\layout\\Landing.js":"4","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\components\\layout\\Navbar.js":"5","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\components\\auth\\Register.js":"6","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\components\\auth\\Login.js":"7","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\store.js":"8","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\reducers\\index.js":"9","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\reducers\\alert.js":"10","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\actions\\types.js":"11","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\actions\\alert.js":"12","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\components\\layout\\Alert.js":"13","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\actions\\auth.js":"14","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\reducers\\auth.js":"15","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\utils\\setAuthToken.js":"16"},{"size":246,"mtime":1610688832841,"results":"17","hashOfConfig":"18"},{"size":1199,"mtime":1611044792467,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1610343123164,"results":"20","hashOfConfig":"18"},{"size":792,"mtime":1610695309094,"results":"21","hashOfConfig":"18"},{"size":553,"mtime":1610694758887,"results":"22","hashOfConfig":"18"},{"size":3326,"mtime":1610996987527,"results":"23","hashOfConfig":"18"},{"size":1998,"mtime":1610803821859,"results":"24","hashOfConfig":"18"},{"size":399,"mtime":1610804239653,"results":"25","hashOfConfig":"18"},{"size":160,"mtime":1610997137313,"results":"26","hashOfConfig":"18"},{"size":391,"mtime":1610806255698,"results":"27","hashOfConfig":"18"},{"size":268,"mtime":1611044109748,"results":"28","hashOfConfig":"18"},{"size":353,"mtime":1610807801590,"results":"29","hashOfConfig":"18"},{"size":535,"mtime":1610807684858,"results":"30","hashOfConfig":"18"},{"size":1291,"mtime":1611044429155,"results":"31","hashOfConfig":"18"},{"size":965,"mtime":1611044536363,"results":"32","hashOfConfig":"18"},{"size":253,"mtime":1611044436047,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"abalp0",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\index.js",["71"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n",["72","73"],"C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\App.js",[],"C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\reportWebVitals.js",[],"C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\components\\layout\\Landing.js",[],"C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\components\\layout\\Navbar.js",[],"C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\components\\auth\\Register.js",["74","75"],"import React, { Fragment, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { setAlert } from \"../../actions/alert\";\r\nimport { register } from \"../../actions/auth\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Register = ({ setAlert, register }) => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    password2: \"\",\r\n  });\r\n\r\n  const { name, email, password, password2 } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password != password2) {\r\n      setAlert(\"Passwords don't match\", \"danger\");\r\n    } else {\r\n      // const newUser = {\r\n      //   name,\r\n      //   email,\r\n      //   password,\r\n      // };\r\n\r\n      // try {\r\n      //   const config = {\r\n      //     headers: {\r\n      //       \"Content-Type\": \"application/json\",\r\n      //     },\r\n      //   };\r\n      //   const body = JSON.stringify(newUser);\r\n\r\n      //   const res = await axios.post(\"/api/users\", body, config);\r\n      //   console.log(res.data);\r\n      // } catch (error) {\r\n      //   console.error(error);\r\n      // }\r\n      register({\r\n        name,\r\n        email,\r\n        password,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign Up</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Create Your Account\r\n      </p>\r\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n          <small className=\"form-text\">\r\n            This site uses Gravatar so if you want a profile image, use a\r\n            Gravatar email\r\n          </small>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Confirm Password\"\r\n            name=\"password2\"\r\n            value={password2}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Register\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Already have an account? <Link to=\"/login\">Sign In</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nRegister.propTypes = {\r\n  setAlert: PropTypes.func.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default connect(null, { setAlert, register })(Register);\r\n","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\components\\auth\\Login.js",["76"],"import React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst Login = () => {\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const onChange = (e) =>\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // const newUser = {\r\n    //   name,\r\n    //   email,\r\n    //   password,\r\n    // };\r\n\r\n    // try {\r\n    //   const config = {\r\n    //     headers: {\r\n    //       \"Content-Type\": \"application/json\",\r\n    //     },\r\n    //   };\r\n    //   const body = JSON.stringify(newUser);\r\n\r\n    //   const res = await axios.post(\"/api/users\", body, config);\r\n    //   console.log(res.data);\r\n    // } catch (error) {\r\n    //   console.error(error);\r\n    // }\r\n    console.log(\"Success\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1 className=\"large text-primary\">Sign In</h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i> Sign into your Account\r\n      </p>\r\n      <form className=\"form\" onSubmit={(e) => onSubmit(e)}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email Address\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={(e) => onChange(e)}\r\n            required\r\n            minLength=\"6\"\r\n          />\r\n        </div>\r\n        <input type=\"submit\" className=\"btn btn-primary\" value=\"Login\" />\r\n      </form>\r\n      <p className=\"my-1\">\r\n        Don't have an account? <Link to=\"/register\">Sign Up</Link>\r\n      </p>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\store.js",[],"C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\reducers\\index.js",[],"C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\reducers\\alert.js",["77"],"import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case SET_ALERT:\r\n      return [...state, payload];\r\n    case REMOVE_ALERT:\r\n      return state.filter((alert) => alert.id !== payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\actions\\types.js",[],"C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\actions\\alert.js",[],"C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\components\\layout\\Alert.js",[],"C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\actions\\auth.js",[],"C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\reducers\\auth.js",["78"],"C:\\Users\\tukad\\Desktop\\DevSocial\\client\\src\\utils\\setAuthToken.js",[],{"ruleId":"79","severity":1,"message":"80","line":4,"column":8,"nodeType":"81","messageId":"82","endLine":4,"endColumn":23},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"79","severity":1,"message":"87","line":3,"column":8,"nodeType":"81","messageId":"82","endLine":3,"endColumn":13},{"ruleId":"88","severity":1,"message":"89","line":24,"column":18,"nodeType":"90","messageId":"91","endLine":24,"endColumn":20},{"ruleId":"79","severity":1,"message":"87","line":3,"column":8,"nodeType":"81","messageId":"82","endLine":3,"endColumn":13},{"ruleId":"92","severity":1,"message":"93","line":5,"column":1,"nodeType":"94","endLine":16,"endColumn":2},{"ruleId":"92","severity":1,"message":"93","line":15,"column":1,"nodeType":"94","endLine":46,"endColumn":2},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["95"],"no-negated-in-lhs",["96"],"'axios' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]